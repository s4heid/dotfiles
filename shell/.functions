#!/usr/bin/env sh


pyclean () {
    find . | grep -E "(__pycache__|\.py[cod]$)" | xargs rm -rf
}

# adds PRs as remotes
pullify() {
    command git config --add remote.origin.fetch '+refs/pull/*/head:refs/remotes/origin/pr/*';
    command git fetch origin
}

# sets gitmessage with story info
story() {
    if [ "$#" -eq 1 ]; then
        echo -e "\n\n[#"$1"](https://www.pivotaltracker.com/story/show/"$1")" > ~/.gitmessage
    else
        :> ~/.gitmessage
    fi
}

google() {
    open -na "Google Chrome" --args "https://www.google.com/search?q=$*"
}

stackoverflow() {
    open -na "Google Chrome" --args "https://www.google.com/search?q=site:stackoverflow.com $*"
}

man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
  man "$@"
}

_bosh() {
    # All arguments except the first one
    args=("${COMP_WORDS[@]:1:$COMP_CWORD}")

    # Only split on newlines
    local IFS=$'\n'
    # Call completion (note that the first element of COMP_WORDS is
    # the executable itself)
    COMPREPLY=($(GO_FLAGS_COMPLETION=1 ${COMP_WORDS[0]} "${args[@]}"))
    return 1
}

complete -o default -F _bosh bosh
